/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.ReportingRole;

import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.ReportingOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ReportingResult;
import Business.WorkQueue.Request;
import Business.WorkQueue.ServiceResult;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.EcoSystem;
import static Business.Enterprise.Enterprise.EnterpriseType.ReportingDepartment;
import Business.Enterprise.ReportingDepartment;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author josef
 */
public class ReportingWorkAreaJPanel extends javax.swing.JPanel {
JPanel userProcessContainer;
UserAccount userAccount;
Organization reportingOrganization;
ReportingDepartment enterprise;
EcoSystem business;
Network network;
Request request;
    /**
     * Creates new form ReportingWorkArea
     */


    public ReportingWorkAreaJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization, Enterprise enterprise,EcoSystem business,Network network) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.userAccount=userAccount;
        this.reportingOrganization=organization;
        this.enterprise=(ReportingDepartment)enterprise;
        this.network=network;
        populateCombobox();
        populateTable();
        //populateTablebyDate();
        
    }
    
    public void populateCombobox(){
        dateCBX.removeAllItems();
        dateCBX.addItem("Please select a date to continue!");
        for(Request request:enterprise.getRequestQueue().getRequestList()){
           // SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd");
           if(request.getRequestDate() != null) {
                dateCBX.addItem(request.getRequestDate());
           }
        }
        populateTablebyDate();
    }
    
    public void populateTablebyDate(){
        DefaultTableModel model=(DefaultTableModel)requestTable.getModel();
        Date selectedDate = null;
        if(dateCBX.getSelectedIndex() > 0)
            selectedDate = (Date) dateCBX.getSelectedItem();
            model.setRowCount(0);
            for(Request request1:enterprise.getRequestQueue().getRequestList()){
                if(request1.getRequestDate() != null && selectedDate != null && request1.getRequestDate() == selectedDate){
                 Object[] row=new Object[5];
                  row[0]=request1;
                  row[1]=request1.getSender().getEmployee().getName();
                  row[2]=request1.getStatus();
                  String reportingStatus=((ReportingResult) request1).getReportingStatus();
                  row[3]= reportingStatus==null?"Recieved":reportingStatus;  
                  SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd");
                  row[4]=dateFormat.format(selectedDate) ;
                  model.addRow(row);
                }
            }           
        
        //if(request != null){
      
        
    }
    
    public void populateTable(){
        
        DefaultTableModel model=(DefaultTableModel)requestTable.getModel();
        //Request request = (Request) dateCBX.getSelectedItem();
        model.setRowCount(0);
        //if(request != null){
        for(Request request1:enterprise.getRequestQueue().getRequestList()){
            Object[] row=new Object[5];
            row[0]=request1;
            row[1]=request1.getSender().getEmployee().getName();
            row[2]=request1.getStatus();
            String reportingStatus=((ReportingResult) request1).getReportingStatus();
            row[3]= reportingStatus==null?"Recieved":reportingStatus;
            //   row[3] = result == null ? "Waiting" : result; 
            SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd");//("yyyy-MM-dd")
            if(request1.getRequestDate() != null) row[4]=dateFormat.format(request1.getRequestDate()) ;
            model.addRow(row);
        }
        
    }
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        btnConfirm = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();
        dateCBX = new javax.swing.JComboBox<>();
        btnChoose = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("微软雅黑", 1, 24)); // NOI18N
        jLabel1.setText("Reporting Department");

        requestTable.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Status", "Response", "Reporting Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(requestTable);
        if (requestTable.getColumnModel().getColumnCount() > 0) {
            requestTable.getColumnModel().getColumn(0).setResizable(false);
            requestTable.getColumnModel().getColumn(1).setResizable(false);
            requestTable.getColumnModel().getColumn(2).setResizable(false);
            requestTable.getColumnModel().getColumn(3).setResizable(false);
            requestTable.getColumnModel().getColumn(4).setResizable(false);
        }

        btnConfirm.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        btnProcess.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        dateCBX.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        dateCBX.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dateCBX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateCBXActionPerformed(evt);
            }
        });

        btnChoose.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        btnChoose.setText("Choose");
        btnChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("微软雅黑", 1, 18)); // NOI18N
        jLabel2.setText("Confirm Date:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnConfirm)
                                .addGap(105, 105, 105)
                                .addComponent(jLabel2)
                                .addGap(72, 72, 72)
                                .addComponent(dateCBX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnChoose))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addComponent(jLabel1)))
                .addGap(0, 44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirm)
                    .addComponent(jLabel2)
                    .addComponent(dateCBX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProcess)
                    .addComponent(btnChoose))
                .addContainerGap(110, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
        int selectedRow=requestTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a request from residents to continue!","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        Request request=(Request)requestTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        
        request.setStatus("Request Confirmed!");
        JOptionPane.showMessageDialog(null,"Confirmed!");
        populateTable();
        
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        int selectedRow=requestTable.getSelectedRow();
        if(selectedRow <0){
            JOptionPane.showMessageDialog(null, "Please select a request from residents to forward!","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        ReportingResult result=(ReportingResult)requestTable.getValueAt(selectedRow, 0);
        result.setStatus("Forwarding ");
        ReportingProcessJPanel rpj=new ReportingProcessJPanel(userProcessContainer,result,userAccount,enterprise,network);
        userProcessContainer.add("rpj",rpj);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnProcessActionPerformed

    private void dateCBXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateCBXActionPerformed
        // TODO add your handling code here:
        
       
    }//GEN-LAST:event_dateCBXActionPerformed

    private void btnChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseActionPerformed
        // TODO add your handling code here:
         populateTablebyDate();
    }//GEN-LAST:event_btnChooseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChoose;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnProcess;
    private javax.swing.JComboBox<Object> dateCBX;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable requestTable;
    // End of variables declaration//GEN-END:variables
}
